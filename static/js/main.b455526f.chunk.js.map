{"version":3,"sources":["components/Card.js","App.js","serviceWorker.js","index.js"],"names":["trans","x","y","s","Card","children","ref","React","useRef","useState","xys","set","props","useSpring","config","className","div","style","transform","to","onMouseLeave","onMouseMove","e","rect","current","getBoundingClientRect","top","height","left","width","calc","clientX","clientY","App","backgroundColor","paddingBottom","padding","borderRadius","boxShadow","data-toggle","data-placement","title","href","icon","faLinkedin","size","color","faGithub","faStackOverflow","faTelegram","faDownload","faEnvelope","faGlobe","paddingRight","paddingLeft","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b455526f.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSpring, animated, config } from \"@react-spring/web\";\n\nconst calc = (x, y, rect) => [\n  -(y - rect.top - rect.height / 2) / 5,\n  (x - rect.left - rect.width / 2) / 5,\n  1.2,\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nexport default function Card({ children }) {\n  const ref = React.useRef(null);\n  const [xys, set] = React.useState([0, 0, 1]);\n  const props = useSpring({ xys, config: config[\"default\"] });\n\n  return (\n    <div className=\"ccard-main\" ref={ref}>\n      <animated.div\n        className=\"ccard\"\n        style={{ transform: props.xys.to(trans) }}\n        onMouseLeave={() => set([0, 0, 1])}\n        onMouseMove={(e) => {\n          const rect = ref.current.getBoundingClientRect();\n          set(calc(e.clientX, e.clientY, rect));\n        }}\n      >\n        {children}\n      </animated.div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faTelegram,\n  faGithub,\n  faStackOverflow,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faDownload, faEnvelope, faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport Card from \"./components/Card\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={{\n        backgroundColor: \"#eeeeee\",\n        height: \"100vh\",\n        paddingBottom: \"20vh\"\n      }}\n        className=\"d-flex align-items-center\"\n      >\n        <div\n          className=\"mx-auto p-5 d-flex align-items-center\"\n          style={{\n            backgroundColor: \"white\",\n            width: \"fit-content\",\n            padding: \"20px\",\n            borderRadius: \"1.5rem\",\n            height: \"fit-content\",\n            boxShadow: `1px 1px 5px 1px black`,\n          }}>\n\n          <div\n            className=\"justify-content-center mb-4 px-5\"\n          >\n            <div className=\"d-flex align-items-center \">\n              Linkedin\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Linkedin\"\n                    href=\"https://www.linkedin.com/in/alireza-azizi-8a53521b4/\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faLinkedin}\n                      size=\"3x\"\n                      color=\"#0077b5\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div>\n            </div>\n            <div className=\"d-flex align-items-center\">\n              Github\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Github\"\n                    href=\"https://github.com/alrzazz/\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faGithub}\n                      size=\"3x\"\n                      color=\"black\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div>\n            </div>\n            <div className=\"d-flex align-items-center\">\n              Stackoverflow\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"stackoverflow\"\n                    href=\"https://stackoverflow.com/users/13069919/alireza-azizi\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faStackOverflow}\n                      size=\"3x\"\n                      color=\"orange\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div>\n            </div>\n            <div className=\"d-flex align-items-center\">\n              Telegram\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Telegram\"\n                    href=\"https://t.me/alrzazz\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faTelegram}\n                      size=\"3x\"\n                      color=\"#0088cc\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div></div>\n            <div className=\"d-flex align-items-center\">\n              Resume\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Resume\"\n                    href=\"https://drive.google.com/file/d/1Xalv6HliaviiiNnBv4rZ6SB7KBw46Sw8/view?usp=sharing\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faDownload}\n                      size=\"3x\"\n                      color=\"#44dd33\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div></div>\n            <div className=\"d-flex align-items-center\">\n              Email\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Email\"\n                    href=\"mailto:alrzazz@yahoo.com\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faEnvelope}\n                      size=\"3x\"\n                      color=\"red\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div></div>\n            <div className=\"d-flex align-items-center\">\n              Hackerrank\n              <div className=\"ml-auto\">\n                <Card>\n                  <a\n                    data-toggle=\"Hackerrank\"\n                    data-placement=\"bottom\"\n                    title=\"Email\"\n                    href=\"https://www.hackerrank.com/alireza_azizi\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faGlobe}\n                      size=\"3x\"\n                      color=\"green\"\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    />\n                  </a>\n                </Card>\n              </div></div>\n          </div>\n          <div className=\"align-self-start\" style={{ paddingRight: \"3rem\", paddingLeft: \"2rem\" }}>\n\n            <h3 className=\"text-left\">Hi. &#128075;\t&#128512;</h3>\n            <p>I'm Alireza Azizi</p>\n            <p>Software Engineer</p>\n            <p>Student at Iran University of Science and Technology</p>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}